{
  "openapi": "3.0.0",
  "info": {
    "title": "Employee Management API",
    "version": "1.0.0",
    "description": "API documentation for the Employee Management System, including authentication and employee operations."
  ,
    "/api/employees/dashboard": {
      "get": {
        "tags": ["Employees"],
        "summary": "Get dashboard statistics",
        "security": [
          { "bearerAuth": [] }
        ],
        "responses": {
          "200": {
            "description": "Dashboard statistics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalEmployees": { "type": "integer" },
                    "activeEmployees": { "type": "integer" },
                    "recentlyAdded": { 
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "integer" },
                          "name": { "type": "string" },
                          "email": { "type": "string" },
                          "role": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      }
    }
},
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication and Authorization APIs"
    },
    {
      "name": "Employees",
      "description": "Employee CRUD operations"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { 
                    "type": "string",
                    "description": "User's username",
                    "minLength": 2
                  },
                  "email": { 
                    "type": "string",
                    "format": "email"
                  },
                  "password": { 
                    "type": "string",
                    "minLength": 6,
                    "description": "Must contain at least one uppercase letter, one lowercase letter, and one number"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "description": "Must match password"
                  },
                  "role": {
                    "type": "string",
                    "enum": ["admin", "employee"],
                    "default": "employee"
                  }
                },
                "required": ["username", "email", "password", "confirmPassword"]
              }
            }
          }
        },
        "responses": {
          "201": { 
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": { 
            "description": "Validation error or user already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": { "type": "string" },
                          "value": { "type": "string" },
                          "msg": { "type": "string" },
                          "path": { "type": "string" },
                          "location": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/auth/verify-email": {
      "post": {
        "tags": ["Auth"],
        "summary": "Verify email using OTP",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "otp": {
                    "type": "string",
                    "description": "One-Time Password sent to email"
                  }
                },
                "required": ["email", "otp"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid OTP or email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/auth/resend-otp": {
      "post": {
        "tags": ["Auth"],
        "summary": "Resend a new OTP to user's email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP resent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or request too soon",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Log in a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "username": { "type": "string" },
                        "email": { "type": "string" },
                        "role": { "type": "string" }
                      }
                    },
                    "token": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": { "description": "Invalid credentials" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/employees": {
      "get": {
        "tags": ["Employees"],
        "summary": "List all employees",
        "security": [
          { "bearerAuth": [] }
        ],
        "responses": {
          "200": {
            "description": "List of employees",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "employees": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Employee" }
                    }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      },
      "post": {
        "tags": ["Employees"],
        "summary": "Create a new employee",
        "security": [
          { "bearerAuth": [] }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Employee" }
            },
            "examples": {
              "employeeExample": {
                "value": {
                  "name": "John Doe",
                  "email": "john.doe@example.com",
                  "role": "employee"
                }
              }
            }
          }
        },
        "responses": {
          "201": { 
            "description": "Employee created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "employee": { "$ref": "#/components/schemas/Employee" }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/api/employees/{id}": {
      "get": {
        "tags": ["Employees"],
        "summary": "Get an employee by ID",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "employee": { "$ref": "#/components/schemas/Employee" }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" },
          "500": { "description": "Server error" }
        }
      },
      "put": {
        "tags": ["Employees"],
        "summary": "Update an employee",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "role": { "type": "string" }
                }
              }
            },
            "examples": {
              "updateExample": {
                "value": {
                  "name": "Updated Name",
                  "email": "updated.email@example.com",
                  "role": "employee"
                }
              }
            }
          }
        },
        "responses": {
          "200": { 
            "description": "Employee updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "employee": { "$ref": "#/components/schemas/Employee" }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" },
          "500": { "description": "Server error" }
        }
      },
      "delete": {
        "tags": ["Employees"],
        "summary": "Delete an employee",
        "security": [
          { "bearerAuth": [] }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": { "description": "Employee deleted" },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Not found" },
          "500": { "description": "Server error" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Employee": {
        "type": "object",
        "properties": {
          "id": { 
            "type": "integer",
            "readOnly": true,
            "description": "Auto-generated ID, do not provide this field when creating" 
          },
          "name": { "type": "string" },
          "email": { 
            "type": "string",
            "format": "email" 
          },
          "role": { "type": "string" }
        },
        "required": ["name", "email", "role"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter your JWT token in the format: Bearer {token}"
      }
    }
  }
}